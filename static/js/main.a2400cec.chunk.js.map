{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["todayId","Clock","state","today","Date","window","setInterval","setState","console","info","toUTCString","slice","prevProps","_prevState","name","this","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAIIA,EAAU,EAUDC,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,uDAKE,WAA2B,IAAD,OACxBJ,EAAUK,OAAOC,aAAY,WAC3B,EAAKC,SAAS,CAAEJ,MAAO,IAAIC,OAC3BI,QAAQC,KAAK,EAAKP,MAAMC,MAAMO,cAAcC,OAAO,IAAK,MACvD,OATP,gCAYE,SACEC,EACAC,GAEID,EAAUE,OAASC,KAAKC,MAAMF,MAChCN,QAAQS,MAAR,uBAA8BL,EAAUE,KAAxC,eAAmDC,KAAKC,MAAMF,SAjBpE,kCAqBE,WACET,OAAOa,cAAclB,KAtBzB,oBAyBE,WACE,IAAQG,EAAUY,KAAKb,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,KAAKC,MAAMF,OAGb,YAED,sBAAMK,UAAU,cAAhB,SACGhB,EAAMO,cAAcC,OAAO,IAAK,YArC3C,GAA2BS,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAGX,IAAMG,EAAb,4MACExB,MAAe,CACbyB,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,uDAQE,WAA2B,IAAD,OACxBd,KAAKc,QAAUxB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEqB,UAAWN,QAC1B,MAEHQ,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAK1B,SAAS,CAAEoB,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKxB,SAAS,CAAEoB,UAAU,SApBhC,oBAwBE,WACE,MAAgCZ,KAAKb,MAA7ByB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOb,KAAMc,WAhCvB,GAAyBR,IAAMC,WCZ/Ba,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.a2400cec.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-console */\nimport React from 'react';\n\nlet todayId = 0;\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends React.Component<Props> {\n  state: State = {\n    today: new Date(),\n  };\n\n  componentDidMount(): void {\n    todayId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n    _prevState: Readonly<State>,\n  ): void {\n    if (prevProps.name !== this.props.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(todayId);\n  }\n\n  render() {\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}